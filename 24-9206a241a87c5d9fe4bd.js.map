{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/css/css.js"],"names":["conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","warndebug","import","urldeclaration","parenthizedterm","declarationbody","comment","name","numbers","units","keyframedeclaration","switchTo","keyframebody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"mappings":"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","file":"24-9206a241a87c5d9fe4bd.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n  comments: {\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}',\n    notIn: ['string', 'comment']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.css',\n  ws: '[ \\t\\n\\r\\f]*',\n  identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.bracket'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.bracket'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '<',\n    close: '>',\n    token: 'delimiter.angle'\n  }],\n  tokenizer: {\n    root: [{\n      include: '@selector'\n    }],\n    selector: [{\n      include: '@comments'\n    }, {\n      include: '@import'\n    }, {\n      include: '@strings'\n    }, ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', {\n      token: 'keyword',\n      next: '@keyframedeclaration'\n    }], ['[@](page|content|font-face|-moz-document)', {\n      token: 'keyword'\n    }], ['[@](charset|namespace)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }], ['(url-prefix)(\\\\()', ['attribute.value', {\n      token: 'delimiter.parenthesis',\n      next: '@urldeclaration'\n    }]], ['(url)(\\\\()', ['attribute.value', {\n      token: 'delimiter.parenthesis',\n      next: '@urldeclaration'\n    }]], {\n      include: '@selectorname'\n    }, ['[\\\\*]', 'tag'], ['[>\\\\+,]', 'delimiter'], ['\\\\[', {\n      token: 'delimiter.bracket',\n      next: '@selectorattribute'\n    }], ['{', {\n      token: 'delimiter.bracket',\n      next: '@selectorbody'\n    }]],\n    selectorbody: [{\n      include: '@comments'\n    }, ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'], ['}', {\n      token: 'delimiter.bracket',\n      next: '@pop'\n    }]],\n    selectorname: [['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag']],\n    selectorattribute: [{\n      include: '@term'\n    }, [']', {\n      token: 'delimiter.bracket',\n      next: '@pop'\n    }]],\n    term: [{\n      include: '@comments'\n    }, ['(url-prefix)(\\\\()', ['attribute.value', {\n      token: 'delimiter.parenthesis',\n      next: '@urldeclaration'\n    }]], ['(url)(\\\\()', ['attribute.value', {\n      token: 'delimiter.parenthesis',\n      next: '@urldeclaration'\n    }]], {\n      include: '@functioninvocation'\n    }, {\n      include: '@numbers'\n    }, {\n      include: '@name'\n    }, ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'delimiter'], [',', 'delimiter']],\n    rulevalue: [{\n      include: '@comments'\n    }, {\n      include: '@strings'\n    }, {\n      include: '@term'\n    }, ['!important', 'keyword'], [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }] // missing semicolon\n    ],\n    warndebug: [['[@](warn|debug)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }]],\n    import: [['[@](import)', {\n      token: 'keyword',\n      next: '@declarationbody'\n    }]],\n    urldeclaration: [{\n      include: '@strings'\n    }, ['[^)\\r\\n]+', 'string'], ['\\\\)', {\n      token: 'delimiter.parenthesis',\n      next: '@pop'\n    }]],\n    parenthizedterm: [{\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'delimiter.parenthesis',\n      next: '@pop'\n    }]],\n    declarationbody: [{\n      include: '@term'\n    }, [';', 'delimiter', '@pop'], ['(?=})', {\n      token: '',\n      next: '@pop'\n    }] // missing semicolon\n    ],\n    comments: [['\\\\/\\\\*', 'comment', '@comment'], ['\\\\/\\\\/+.*', 'comment']],\n    comment: [['\\\\*\\\\/', 'comment', '@pop'], [/[^*/]+/, 'comment'], [/./, 'comment']],\n    name: [['@identifier', 'attribute.value']],\n    numbers: [['-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', {\n      token: 'attribute.value.number',\n      next: '@units'\n    }], ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']],\n    units: [['(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'attribute.value.unit', '@pop']],\n    keyframedeclaration: [['@identifier', 'attribute.value'], ['{', {\n      token: 'delimiter.bracket',\n      switchTo: '@keyframebody'\n    }]],\n    keyframebody: [{\n      include: '@term'\n    }, ['{', {\n      token: 'delimiter.bracket',\n      next: '@selectorbody'\n    }], ['}', {\n      token: 'delimiter.bracket',\n      next: '@pop'\n    }]],\n    functioninvocation: [['@identifier\\\\(', {\n      token: 'attribute.value',\n      next: '@functionarguments'\n    }]],\n    functionarguments: [['\\\\$@identifier@ws:', 'attribute.name'], ['[,]', 'delimiter'], {\n      include: '@term'\n    }, ['\\\\)', {\n      token: 'attribute.value',\n      next: '@pop'\n    }]],\n    strings: [['~?\"', {\n      token: 'string',\n      next: '@stringenddoublequote'\n    }], ['~?\\'', {\n      token: 'string',\n      next: '@stringendquote'\n    }]],\n    stringenddoublequote: [['\\\\\\\\.', 'string'], ['\"', {\n      token: 'string',\n      next: '@pop'\n    }], [/[^\\\\\"]+/, 'string'], ['.', 'string']],\n    stringendquote: [['\\\\\\\\.', 'string'], ['\\'', {\n      token: 'string',\n      next: '@pop'\n    }], [/[^\\\\']+/, 'string'], ['.', 'string']]\n  }\n};"],"sourceRoot":""}