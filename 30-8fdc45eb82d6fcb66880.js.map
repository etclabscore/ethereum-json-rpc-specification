{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/html/html.js"],"names":["_monaco","monaco","self","EMPTY_ELEMENTS","conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","folding","markers","start","end","language","defaultToken","tokenPostfix","ignoreCase","tokenizer","root","token","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","switchTo","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded"],"mappings":"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","file":"30-8fdc45eb82d6fcb66880.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict'; // Allow for running under nodejs/requirejs in tests\n\nvar _monaco = typeof monaco === 'undefined' ? self.monaco : monaco;\n\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: ['<!--', '-->']\n  },\n  brackets: [['<!--', '-->'], ['<', '>'], ['{', '}'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  surroundingPairs: [{\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '<',\n    close: '>'\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n    afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n    action: {\n      indentAction: _monaco.languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n    action: {\n      indentAction: _monaco.languages.IndentAction.Indent\n    }\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#endregion\\\\b.*-->\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.html',\n  ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/<!DOCTYPE/, 'metatag', '@doctype'], [/<!--/, 'comment', '@comment'], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, ['delimiter', 'tag', '', 'delimiter']], [/(<)(script)/, ['delimiter', {\n      token: 'tag',\n      next: '@script'\n    }]], [/(<)(style)/, ['delimiter', {\n      token: 'tag',\n      next: '@style'\n    }]], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', {\n      token: 'tag',\n      next: '@otherTag'\n    }]], [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', {\n      token: 'tag',\n      next: '@otherTag'\n    }]], [/</, 'delimiter'], [/[^<]+/]],\n    doctype: [[/[^>]+/, 'metatag.content'], [/>/, 'metatag', '@pop']],\n    comment: [[/-->/, 'comment', '@pop'], [/[^-]+/, 'comment.content'], [/./, 'comment.content']],\n    otherTag: [[/\\/?>/, 'delimiter', '@pop'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/]],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [[/type/, 'attribute.name', '@scriptAfterType'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/>/, {\n      token: 'delimiter',\n      next: '@scriptEmbedded',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(script\\s*)(>)/, ['delimiter', 'tag', {\n      token: 'delimiter',\n      next: '@pop'\n    }]]],\n    // After <script ... type\n    scriptAfterType: [[/=/, 'delimiter', '@scriptAfterTypeEquals'], [/>/, {\n      token: 'delimiter',\n      next: '@scriptEmbedded',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type =\n    scriptAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: 'attribute.value',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter',\n      next: '@scriptEmbedded',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type = $S2\n    scriptWithCustomType: [[/>/, {\n      token: 'delimiter',\n      next: '@scriptEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    scriptEmbedded: [[/<\\/script/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }], [/[^<]+/, '']],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [[/type/, 'attribute.name', '@styleAfterType'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/>/, {\n      token: 'delimiter',\n      next: '@styleEmbedded',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(style\\s*)(>)/, ['delimiter', 'tag', {\n      token: 'delimiter',\n      next: '@pop'\n    }]]],\n    // After <style ... type\n    styleAfterType: [[/=/, 'delimiter', '@styleAfterTypeEquals'], [/>/, {\n      token: 'delimiter',\n      next: '@styleEmbedded',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type =\n    styleAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: 'attribute.value',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter',\n      next: '@styleEmbedded',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type = $S2\n    styleWithCustomType: [[/>/, {\n      token: 'delimiter',\n      next: '@styleEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    styleEmbedded: [[/<\\/style/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }], [/[^<]+/, '']]\n  }\n};"],"sourceRoot":""}