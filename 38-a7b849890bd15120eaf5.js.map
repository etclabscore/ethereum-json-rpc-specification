{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/msdax/msdax.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","functions","tokenizer","root","include","cases","whitespace","next","comment","numbers","strings","string","complexIdentifiers","bracketedIdentifier","quotedIdentifier"],"mappings":"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","file":"38-a7b849890bd15120eaf5.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['[', ']'], ['(', ')'], ['{', '}']],\n  autoClosingPairs: [{\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment']\n  }, {\n    open: '{',\n    close: '}',\n    notIn: ['string', 'comment']\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.msdax',\n  ignoreCase: true,\n  brackets: [{\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }, {\n    open: '{',\n    close: '}',\n    token: 'delimiter.brackets'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }],\n  keywords: [// Query keywords\n  'VAR', 'RETURN', 'NOT', 'EVALUATE', 'DATATABLE', 'ORDER', 'BY', 'START', 'AT', 'DEFINE', 'MEASURE', 'ASC', 'DESC', 'IN', // Datatable types\n  'BOOLEAN', 'DOUBLE', 'INTEGER', 'DATETIME', 'CURRENCY', 'STRING'],\n  functions: [// Relational\n  'CLOSINGBALANCEMONTH', 'CLOSINGBALANCEQUARTER', 'CLOSINGBALANCEYEAR', 'DATEADD', 'DATESBETWEEN', 'DATESINPERIOD', 'DATESMTD', 'DATESQTD', 'DATESYTD', 'ENDOFMONTH', 'ENDOFQUARTER', 'ENDOFYEAR', 'FIRSTDATE', 'FIRSTNONBLANK', 'LASTDATE', 'LASTNONBLANK', 'NEXTDAY', 'NEXTMONTH', 'NEXTQUARTER', 'NEXTYEAR', 'OPENINGBALANCEMONTH', 'OPENINGBALANCEQUARTER', 'OPENINGBALANCEYEAR', 'PARALLELPERIOD', 'PREVIOUSDAY', 'PREVIOUSMONTH', 'PREVIOUSQUARTER', 'PREVIOUSYEAR', 'SAMEPERIODLASTYEAR', 'STARTOFMONTH', 'STARTOFQUARTER', 'STARTOFYEAR', 'TOTALMTD', 'TOTALQTD', 'TOTALYTD', 'ADDCOLUMNS', 'ADDMISSINGITEMS', 'ALL', 'ALLEXCEPT', 'ALLNOBLANKROW', 'ALLSELECTED', 'CALCULATE', 'CALCULATETABLE', 'CALENDAR', 'CALENDARAUTO', 'CROSSFILTER', 'CROSSJOIN', 'CURRENTGROUP', 'DATATABLE', 'DETAILROWS', 'DISTINCT', 'EARLIER', 'EARLIEST', 'EXCEPT', 'FILTER', 'FILTERS', 'GENERATE', 'GENERATEALL', 'GROUPBY', 'IGNORE', 'INTERSECT', 'ISONORAFTER', 'KEEPFILTERS', 'LOOKUPVALUE', 'NATURALINNERJOIN', 'NATURALLEFTOUTERJOIN', 'RELATED', 'RELATEDTABLE', 'ROLLUP', 'ROLLUPADDISSUBTOTAL', 'ROLLUPGROUP', 'ROLLUPISSUBTOTAL', 'ROW', 'SAMPLE', 'SELECTCOLUMNS', 'SUBSTITUTEWITHINDEX', 'SUMMARIZE', 'SUMMARIZECOLUMNS', 'TOPN', 'TREATAS', 'UNION', 'USERELATIONSHIP', 'VALUES', 'SUM', 'SUMX', 'PATH', 'PATHCONTAINS', 'PATHITEM', 'PATHITEMREVERSE', 'PATHLENGTH', 'AVERAGE', 'AVERAGEA', 'AVERAGEX', 'COUNT', 'COUNTA', 'COUNTAX', 'COUNTBLANK', 'COUNTROWS', 'COUNTX', 'DISTINCTCOUNT', 'DIVIDE', 'GEOMEAN', 'GEOMEANX', 'MAX', 'MAXA', 'MAXX', 'MEDIAN', 'MEDIANX', 'MIN', 'MINA', 'MINX', 'PERCENTILE.EXC', 'PERCENTILE.INC', 'PERCENTILEX.EXC', 'PERCENTILEX.INC', 'PRODUCT', 'PRODUCTX', 'RANK.EQ', 'RANKX', 'STDEV.P', 'STDEV.S', 'STDEVX.P', 'STDEVX.S', 'VAR.P', 'VAR.S', 'VARX.P', 'VARX.S', 'XIRR', 'XNPV', // Scalar\n  'DATE', 'DATEDIFF', 'DATEVALUE', 'DAY', 'EDATE', 'EOMONTH', 'HOUR', 'MINUTE', 'MONTH', 'NOW', 'SECOND', 'TIME', 'TIMEVALUE', 'TODAY', 'WEEKDAY', 'WEEKNUM', 'YEAR', 'YEARFRAC', 'CONTAINS', 'CONTAINSROW', 'CUSTOMDATA', 'ERROR', 'HASONEFILTER', 'HASONEVALUE', 'ISBLANK', 'ISCROSSFILTERED', 'ISEMPTY', 'ISERROR', 'ISEVEN', 'ISFILTERED', 'ISLOGICAL', 'ISNONTEXT', 'ISNUMBER', 'ISODD', 'ISSUBTOTAL', 'ISTEXT', 'USERNAME', 'USERPRINCIPALNAME', 'AND', 'FALSE', 'IF', 'IFERROR', 'NOT', 'OR', 'SWITCH', 'TRUE', 'ABS', 'ACOS', 'ACOSH', 'ACOT', 'ACOTH', 'ASIN', 'ASINH', 'ATAN', 'ATANH', 'BETA.DIST', 'BETA.INV', 'CEILING', 'CHISQ.DIST', 'CHISQ.DIST.RT', 'CHISQ.INV', 'CHISQ.INV.RT', 'COMBIN', 'COMBINA', 'CONFIDENCE.NORM', 'CONFIDENCE.T', 'COS', 'COSH', 'COT', 'COTH', 'CURRENCY', 'DEGREES', 'EVEN', 'EXP', 'EXPON.DIST', 'FACT', 'FLOOR', 'GCD', 'INT', 'ISO.CEILING', 'LCM', 'LN', 'LOG', 'LOG10', 'MOD', 'MROUND', 'ODD', 'PERMUT', 'PI', 'POISSON.DIST', 'POWER', 'QUOTIENT', 'RADIANS', 'RAND', 'RANDBETWEEN', 'ROUND', 'ROUNDDOWN', 'ROUNDUP', 'SIGN', 'SIN', 'SINH', 'SQRT', 'SQRTPI', 'TAN', 'TANH', 'TRUNC', 'BLANK', 'CONCATENATE', 'CONCATENATEX', 'EXACT', 'FIND', 'FIXED', 'FORMAT', 'LEFT', 'LEN', 'LOWER', 'MID', 'REPLACE', 'REPT', 'RIGHT', 'SEARCH', 'SUBSTITUTE', 'TRIM', 'UNICHAR', 'UNICODE', 'UPPER', 'VALUE'],\n  tokenizer: {\n    root: [{\n      include: '@comments'\n    }, {\n      include: '@whitespace'\n    }, {\n      include: '@numbers'\n    }, {\n      include: '@strings'\n    }, {\n      include: '@complexIdentifiers'\n    }, [/[;,.]/, 'delimiter'], [/[({})]/, '@brackets'], [/[a-z_][a-zA-Z0-9_]*/, {\n      cases: {\n        '@keywords': 'keyword',\n        '@functions': 'keyword',\n        '@default': 'identifier'\n      }\n    }], [/[<>=!%&+\\-*/|~^]/, 'operator']],\n    whitespace: [[/\\s+/, 'white']],\n    comments: [[/\\/\\/+.*/, 'comment'], [/\\/\\*/, {\n      token: 'comment.quote',\n      next: '@comment'\n    }]],\n    comment: [[/[^*/]+/, 'comment'], [/\\*\\//, {\n      token: 'comment.quote',\n      next: '@pop'\n    }], [/./, 'comment']],\n    numbers: [[/0[xX][0-9a-fA-F]*/, 'number'], [/[$][+-]*\\d*(\\.\\d*)?/, 'number'], [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']],\n    strings: [[/N\"/, {\n      token: 'string',\n      next: '@string'\n    }], [/\"/, {\n      token: 'string',\n      next: '@string'\n    }]],\n    string: [[/[^\"]+/, 'string'], [/\"\"/, 'string'], [/\"/, {\n      token: 'string',\n      next: '@pop'\n    }]],\n    complexIdentifiers: [[/\\[/, {\n      token: 'identifier.quote',\n      next: '@bracketedIdentifier'\n    }], [/'/, {\n      token: 'identifier.quote',\n      next: '@quotedIdentifier'\n    }]],\n    bracketedIdentifier: [[/[^\\]]+/, 'identifier'], [/]]/, 'identifier'], [/]/, {\n      token: 'identifier.quote',\n      next: '@pop'\n    }]],\n    quotedIdentifier: [[/[^']+/, 'identifier'], [/''/, 'identifier'], [/'/, {\n      token: 'identifier.quote',\n      next: '@pop'\n    }]]\n  }\n};"],"sourceRoot":""}