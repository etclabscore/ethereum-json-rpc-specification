{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","namespaceFollows","parenFollows","operators","symbols","escapes","tokenizer","root","cases","next","include","qualified","namespace","comment","string","litstring","litinterpstring","interpolatedstring","whitespace"],"mappings":"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","file":"22-7bfce3e9e0f9cfdc0a62.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '<',\n    close: '>'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.cs',\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '<',\n    close: '>',\n    token: 'delimiter.angle'\n  }],\n  keywords: ['extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short', 'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double', 'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref', 'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked', 'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case', 'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto', 'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from', 'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending', 'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class', 'field', 'event', 'method', 'param', 'property', 'public', 'protected', 'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly', 'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove', 'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum', 'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof', 'when'],\n  namespaceFollows: ['namespace', 'using'],\n  parenFollows: ['if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'],\n  operators: ['=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<', '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=', '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  // escape sequences\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [// identifiers and keywords\n    [/\\@?[a-zA-Z_]\\w*/, {\n      cases: {\n        '@namespaceFollows': {\n          token: 'keyword.$0',\n          next: '@namespace'\n        },\n        '@keywords': {\n          token: 'keyword.$0',\n          next: '@qualified'\n        },\n        '@default': {\n          token: 'identifier',\n          next: '@qualified'\n        }\n      }\n    }], // whitespace\n    {\n      include: '@whitespace'\n    }, // delimiters and operators\n    [/}/, {\n      cases: {\n        '$S2==interpolatedstring': {\n          token: 'string.quote',\n          next: '@pop'\n        },\n        '$S2==litinterpstring': {\n          token: 'string.quote',\n          next: '@pop'\n        },\n        '@default': '@brackets'\n      }\n    }], [/[{}()\\[\\]]/, '@brackets'], [/[<>](?!@symbols)/, '@brackets'], [/@symbols/, {\n      cases: {\n        '@operators': 'delimiter',\n        '@default': ''\n      }\n    }], // numbers\n    [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'], [/0[xX][0-9a-fA-F_]+/, 'number.hex'], [/0[bB][01_]+/, 'number.hex'], [/[0-9_]+/, 'number'], // delimiter: after number because of .\\d floats\n    [/[;,.]/, 'delimiter'], // strings\n    [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], [/\"/, {\n      token: 'string.quote',\n      next: '@string'\n    }], [/\\$\\@\"/, {\n      token: 'string.quote',\n      next: '@litinterpstring'\n    }], [/\\@\"/, {\n      token: 'string.quote',\n      next: '@litstring'\n    }], [/\\$\"/, {\n      token: 'string.quote',\n      next: '@interpolatedstring'\n    }], // characters\n    [/'[^\\\\']'/, 'string'], [/(')(@escapes)(')/, ['string', 'string.escape', 'string']], [/'/, 'string.invalid']],\n    qualified: [[/[a-zA-Z_][\\w]*/, {\n      cases: {\n        '@keywords': {\n          token: 'keyword.$0'\n        },\n        '@default': 'identifier'\n      }\n    }], [/\\./, 'delimiter'], ['', '', '@pop']],\n    namespace: [{\n      include: '@whitespace'\n    }, [/[A-Z]\\w*/, 'namespace'], [/[\\.=]/, 'delimiter'], ['', '', '@pop']],\n    comment: [[/[^\\/*]+/, 'comment'], // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\n    ['\\\\*/', 'comment', '@pop'], [/[\\/*]/, 'comment']],\n    string: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }]],\n    litstring: [[/[^\"]+/, 'string'], [/\"\"/, 'string.escape'], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }]],\n    litinterpstring: [[/[^\"{]+/, 'string'], [/\"\"/, 'string.escape'], [/{{/, 'string.escape'], [/}}/, 'string.escape'], [/{/, {\n      token: 'string.quote',\n      next: 'root.litinterpstring'\n    }], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }]],\n    interpolatedstring: [[/[^\\\\\"{]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/{{/, 'string.escape'], [/}}/, 'string.escape'], [/{/, {\n      token: 'string.quote',\n      next: 'root.interpolatedstring'\n    }], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }]],\n    whitespace: [[/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'], [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'], [/[ \\t\\v\\f\\r\\n]+/, ''], [/\\/\\*/, 'comment', '@comment'], [/\\/\\/.*$/, 'comment']]\n  }\n};"],"sourceRoot":""}