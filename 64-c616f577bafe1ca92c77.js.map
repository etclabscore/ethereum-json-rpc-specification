{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","constant","defineKeywords","typeKeywords","operators","builtinVariables","builtinFunctions","symbols","escapes","tokenizer","root","next","cases","include","bracket","params","comment","comment2","whitespace","string_dq","string_sq"],"mappings":"4FAAA,qFAMO,IAAIA,EAAO,CAChBC,SAAU,CACRC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEvBC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,MAAO,WAAY,CAAC,YAAa,WAAY,CAAC,aAAc,WAAY,CAAC,aAAc,WAAY,CAAC,WAAY,WAAY,CAAC,aAAc,WAAY,CAAC,aAAc,WAAY,CAAC,eAAgB,WAAY,CAAC,OAAQ,YAAa,CAAC,SAAU,cAAe,CAAC,UAAW,eAAgB,CAAC,WAAY,gBAAiB,CAAC,iBAAkB,sBAAuB,CAAC,SAAU,cAAe,CAAC,OAAQ,YAAa,CAAC,eAAgB,YAAa,CAAC,cAAe,mBAAoB,CAAC,gBAAiB,qBAAsB,CAAC,MAAO,WAAY,CAAC,WAAY,gBAAiB,CAAC,UAAW,eAAgB,CAAC,UAAW,eAAgB,CAAC,SAAU,cAAe,CAAC,WAAY,gBAAiB,CAAC,WAAY,gBAAiB,CAAC,UAAW,gBACzvBC,iBAAkB,CAAC,CACjBC,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,cACP,CACDF,KAAM,IACNC,MAAO,IACPC,MAAO,CAAC,cACP,CACDF,KAAM,MACNC,MAAO,WACN,CACDD,KAAM,YACNC,MAAO,WACN,CACDD,KAAM,aACNC,MAAO,WACN,CACDD,KAAM,aACNC,MAAO,WACN,CACDD,KAAM,WACNC,MAAO,WACN,CACDD,KAAM,aACNC,MAAO,WACN,CACDD,KAAM,aACNC,MAAO,WACN,CACDD,KAAM,eACNC,MAAO,WACN,CACDD,KAAM,OACNC,MAAO,YACN,CACDD,KAAM,SACNC,MAAO,cACN,CACDD,KAAM,UACNC,MAAO,eACN,CACDD,KAAM,WACNC,MAAO,gBACN,CACDD,KAAM,iBACNC,MAAO,sBACN,CACDD,KAAM,SACNC,MAAO,cACN,CACDD,KAAM,OACNC,MAAO,YACN,CACDD,KAAM,eACNC,MAAO,YACN,CACDD,KAAM,cACNC,MAAO,mBACN,CACDD,KAAM,gBACNC,MAAO,qBACN,CACDD,KAAM,MACNC,MAAO,WACN,CACDD,KAAM,WACNC,MAAO,gBACN,CACDD,KAAM,UACNC,MAAO,eACN,CACDD,KAAM,UACNC,MAAO,eACN,CACDD,KAAM,SACNC,MAAO,cACN,CACDD,KAAM,WACNC,MAAO,gBACN,CACDD,KAAM,WACNC,MAAO,gBACN,CACDD,KAAM,UACNC,MAAO,gBAETE,iBAAkB,CAAC,CACjBH,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,MACNC,MAAO,WACN,CACDD,KAAM,YACNC,MAAO,WACN,CACDD,KAAM,aACNC,MAAO,WACN,CACDD,KAAM,aACNC,MAAO,WACN,CACDD,KAAM,WACNC,MAAO,WACN,CACDD,KAAM,aACNC,MAAO,WACN,CACDD,KAAM,aACNC,MAAO,WACN,CACDD,KAAM,eACNC,MAAO,WACN,CACDD,KAAM,OACNC,MAAO,YACN,CACDD,KAAM,SACNC,MAAO,cACN,CACDD,KAAM,UACNC,MAAO,eACN,CACDD,KAAM,WACNC,MAAO,gBACN,CACDD,KAAM,iBACNC,MAAO,sBACN,CACDD,KAAM,SACNC,MAAO,cACN,CACDD,KAAM,OACNC,MAAO,YACN,CACDD,KAAM,eACNC,MAAO,YACN,CACDD,KAAM,cACNC,MAAO,mBACN,CACDD,KAAM,gBACNC,MAAO,qBACN,CACDD,KAAM,MACNC,MAAO,WACN,CACDD,KAAM,WACNC,MAAO,gBACN,CACDD,KAAM,UACNC,MAAO,eACN,CACDD,KAAM,UACNC,MAAO,eACN,CACDD,KAAM,SACNC,MAAO,cACN,CACDD,KAAM,WACNC,MAAO,gBACN,CACDD,KAAM,WACNC,MAAO,gBACN,CACDD,KAAM,UACNC,MAAO,gBAETG,QAAS,CACPC,QAAS,CACPC,MAAO,IAAIC,OAAO,6BAClBC,IAAK,IAAID,OAAO,mCAIXE,EAAW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","file":"64-c616f577bafe1ca92c77.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '//',\n    blockComment: ['(*', '*)']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['var', 'end_var'], ['var_input', 'end_var'], ['var_output', 'end_var'], ['var_in_out', 'end_var'], ['var_temp', 'end_var'], ['var_global', 'end_var'], ['var_access', 'end_var'], ['var_external', 'end_var'], ['type', 'end_type'], ['struct', 'end_struct'], ['program', 'end_program'], ['function', 'end_function'], ['function_block', 'end_function_block'], ['action', 'end_action'], ['step', 'end_step'], ['initial_step', 'end_step'], ['transaction', 'end_transaction'], ['configuration', 'end_configuration'], ['tcp', 'end_tcp'], ['recource', 'end_recource'], ['channel', 'end_channel'], ['library', 'end_library'], ['folder', 'end_folder'], ['binaries', 'end_binaries'], ['includes', 'end_includes'], ['sources', 'end_sources']],\n  autoClosingPairs: [{\n    open: '[',\n    close: ']'\n  }, {\n    open: '{',\n    close: '}'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '/*',\n    close: '*/'\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string_sq']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string_dq']\n  }, {\n    open: 'var',\n    close: 'end_var'\n  }, {\n    open: 'var_input',\n    close: 'end_var'\n  }, {\n    open: 'var_output',\n    close: 'end_var'\n  }, {\n    open: 'var_in_out',\n    close: 'end_var'\n  }, {\n    open: 'var_temp',\n    close: 'end_var'\n  }, {\n    open: 'var_global',\n    close: 'end_var'\n  }, {\n    open: 'var_access',\n    close: 'end_var'\n  }, {\n    open: 'var_external',\n    close: 'end_var'\n  }, {\n    open: 'type',\n    close: 'end_type'\n  }, {\n    open: 'struct',\n    close: 'end_struct'\n  }, {\n    open: 'program',\n    close: 'end_program'\n  }, {\n    open: 'function',\n    close: 'end_function'\n  }, {\n    open: 'function_block',\n    close: 'end_function_block'\n  }, {\n    open: 'action',\n    close: 'end_action'\n  }, {\n    open: 'step',\n    close: 'end_step'\n  }, {\n    open: 'initial_step',\n    close: 'end_step'\n  }, {\n    open: 'transaction',\n    close: 'end_transaction'\n  }, {\n    open: 'configuration',\n    close: 'end_configuration'\n  }, {\n    open: 'tcp',\n    close: 'end_tcp'\n  }, {\n    open: 'recource',\n    close: 'end_recource'\n  }, {\n    open: 'channel',\n    close: 'end_channel'\n  }, {\n    open: 'library',\n    close: 'end_library'\n  }, {\n    open: 'folder',\n    close: 'end_folder'\n  }, {\n    open: 'binaries',\n    close: 'end_binaries'\n  }, {\n    open: 'includes',\n    close: 'end_includes'\n  }, {\n    open: 'sources',\n    close: 'end_sources'\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: 'var',\n    close: 'end_var'\n  }, {\n    open: 'var_input',\n    close: 'end_var'\n  }, {\n    open: 'var_output',\n    close: 'end_var'\n  }, {\n    open: 'var_in_out',\n    close: 'end_var'\n  }, {\n    open: 'var_temp',\n    close: 'end_var'\n  }, {\n    open: 'var_global',\n    close: 'end_var'\n  }, {\n    open: 'var_access',\n    close: 'end_var'\n  }, {\n    open: 'var_external',\n    close: 'end_var'\n  }, {\n    open: 'type',\n    close: 'end_type'\n  }, {\n    open: 'struct',\n    close: 'end_struct'\n  }, {\n    open: 'program',\n    close: 'end_program'\n  }, {\n    open: 'function',\n    close: 'end_function'\n  }, {\n    open: 'function_block',\n    close: 'end_function_block'\n  }, {\n    open: 'action',\n    close: 'end_action'\n  }, {\n    open: 'step',\n    close: 'end_step'\n  }, {\n    open: 'initial_step',\n    close: 'end_step'\n  }, {\n    open: 'transaction',\n    close: 'end_transaction'\n  }, {\n    open: 'configuration',\n    close: 'end_configuration'\n  }, {\n    open: 'tcp',\n    close: 'end_tcp'\n  }, {\n    open: 'recource',\n    close: 'end_recource'\n  }, {\n    open: 'channel',\n    close: 'end_channel'\n  }, {\n    open: 'library',\n    close: 'end_library'\n  }, {\n    open: 'folder',\n    close: 'end_folder'\n  }, {\n    open: 'binaries',\n    close: 'end_binaries'\n  }, {\n    open: 'includes',\n    close: 'end_includes'\n  }, {\n    open: 'sources',\n    close: 'end_sources'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.st',\n  ignoreCase: true,\n  brackets: [{\n    token: 'delimiter.curly',\n    open: '{',\n    close: '}'\n  }, {\n    token: 'delimiter.parenthesis',\n    open: '(',\n    close: ')'\n  }, {\n    token: 'delimiter.square',\n    open: '[',\n    close: ']'\n  }],\n  keywords: ['if', 'end_if', 'elsif', 'else', 'case', 'of', 'to', 'do', 'with', 'by', 'while', 'repeat', 'end_while', 'end_repeat', 'end_case', 'for', 'end_for', 'task', 'retain', 'non_retain', 'constant', 'with', 'at', 'exit', 'return', 'interval', 'priority', 'address', 'port', 'on_channel', 'then', 'iec', 'file', 'uses', 'version', 'packagetype', 'displayname', 'copyright', 'summary', 'vendor', 'common_source', 'from'],\n  constant: ['false', 'true', 'null'],\n  defineKeywords: ['var', 'var_input', 'var_output', 'var_in_out', 'var_temp', 'var_global', 'var_access', 'var_external', 'end_var', 'type', 'end_type', 'struct', 'end_struct', 'program', 'end_program', 'function', 'end_function', 'function_block', 'end_function_block', 'configuration', 'end_configuration', 'tcp', 'end_tcp', 'recource', 'end_recource', 'channel', 'end_channel', 'library', 'end_library', 'folder', 'end_folder', 'binaries', 'end_binaries', 'includes', 'end_includes', 'sources', 'end_sources', 'action', 'end_action', 'step', 'initial_step', 'end_step', 'transaction', 'end_transaction'],\n  typeKeywords: ['int', 'sint', 'dint', 'lint', 'usint', 'uint', 'udint', 'ulint', 'real', 'lreal', 'time', 'date', 'time_of_day', 'date_and_time', 'string', 'bool', 'byte', 'world', 'dworld', 'array', 'pointer', 'lworld'],\n  operators: ['=', '>', '<', ':', ':=', '<=', '>=', '<>', '&', '+', '-', '*', '**', 'MOD', '^', 'or', 'and', 'not', 'xor', 'abs', 'acos', 'asin', 'atan', 'cos', 'exp', 'expt', 'ln', 'log', 'sin', 'sqrt', 'tan', 'sel', 'max', 'min', 'limit', 'mux', 'shl', 'shr', 'rol', 'ror', 'indexof', 'sizeof', 'adr', 'adrinst', 'bitadr', 'is_valid'],\n  builtinVariables: [],\n  builtinFunctions: ['sr', 'rs', 'tp', 'ton', 'tof', 'eq', 'ge', 'le', 'lt', 'ne', 'round', 'trunc', 'ctd', 'сtu', 'ctud', 'r_trig', 'f_trig', 'move', 'concat', 'delete', 'find', 'insert', 'left', 'len', 'replace', 'right', 'rtc'],\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  // C# style strings\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/(\\.\\.)/, 'delimiter'], [/\\b(16#[0-9A-Fa-f\\_]*)+\\b/, 'number.hex'], [/\\b(2#[01\\_]+)+\\b/, 'number.binary'], [/\\b(8#[0-9\\_]*)+\\b/, 'number.octal'], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'], [/\\b(L?REAL)#[0-9\\_\\.e]+\\b/, 'number.float'], [/\\b(BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT)#[0-9\\_]+\\b/, 'number'], [/\\d+/, 'number'], [/\\b(T|DT|TOD)#[0-9:-_shmyd]+\\b/, 'tag'], [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]+/, 'tag'], [/\\%(I|Q|M)[0-9\\.]*/, 'tag'], [/\\b[A-Za-z]{1,6}#[0-9]+/, 'tag'], [/\\b(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]+\\b/, 'predefined'], [/\\b[A_Za-z]+(_TO_)[A_Za-z]+\\b/, 'predefined'], [/[;]/, 'delimiter'], [/[.]/, {\n      token: 'delimiter',\n      next: '@params'\n    }], // identifiers and keywords\n    [/[a-zA-Z_]\\w*/, {\n      cases: {\n        '@operators': 'operators',\n        '@keywords': 'keyword',\n        '@typeKeywords': 'type',\n        '@defineKeywords': 'variable',\n        '@constant': 'constant',\n        '@builtinVariables': 'predefined',\n        '@builtinFunctions': 'predefined',\n        '@default': 'identifier'\n      }\n    }], {\n      include: '@whitespace'\n    }, [/[{}()\\[\\]]/, '@brackets'], [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], [/\"/, {\n      token: 'string.quote',\n      bracket: '@open',\n      next: '@string_dq'\n    }], [/'/, {\n      token: 'string.quote',\n      bracket: '@open',\n      next: '@string_sq'\n    }], [/'[^\\\\']'/, 'string'], [/(')(@escapes)(')/, ['string', 'string.escape', 'string']], [/'/, 'string.invalid']],\n    params: [[/\\b[A-Za-z0-9_]+\\b(?=\\()/, {\n      token: 'identifier',\n      next: '@pop'\n    }], [/\\b[A-Za-z0-9_]+\\b/, 'variable.name', '@pop']],\n    comment: [[/[^\\/*]+/, 'comment'], [/\\/\\*/, 'comment', '@push'], [\"\\\\*/\", 'comment', '@pop'], [/[\\/*]/, 'comment']],\n    comment2: [[/[^\\(*]+/, 'comment'], [/\\(\\*/, 'comment', '@push'], [\"\\\\*\\\\)\", 'comment', '@pop'], [/[\\(*]/, 'comment']],\n    whitespace: [[/[ \\t\\r\\n]+/, 'white'], [/\\/\\/.*$/, 'comment'], [/\\/\\*/, 'comment', '@comment'], [/\\(\\*/, 'comment', '@comment2']],\n    string_dq: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"/, {\n      token: 'string.quote',\n      bracket: '@close',\n      next: '@pop'\n    }]],\n    string_sq: [[/[^\\\\']+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/'/, {\n      token: 'string.quote',\n      bracket: '@close',\n      next: '@pop'\n    }]]\n  }\n};"],"sourceRoot":""}