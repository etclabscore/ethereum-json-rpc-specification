{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/scheme/scheme.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","constants","operators","tokenizer","root","include","cases","comment","whitespace","strings","multiLineString"],"mappings":"8FAAA,qFAMO,IAAIA,EAAO,CAChBC,SAAU,CACRC,YAAa,IACbC,aAAc,CAAC,KAAM,OAEvBC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MACzCC,iBAAkB,CAAC,CACjBC,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,MAETC,iBAAkB,CAAC,CACjBF,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,OAGAE,EAAW,CACpBC,aAAc,GACdC,YAAY,EACZC,aAAc,UACdR,SAAU,CAAC,CACTE,KAAM,IACNC,MAAO,IACPM,MAAO,yBACN,CACDP,KAAM,IACNC,MAAO,IACPM,MAAO,mBACN,CACDP,KAAM,IACNC,MAAO,IACPM,MAAO,qBAETC,SAAU,CAAC,OAAQ,KAAM,MAAO,OAAQ,KAAM,OAAQ,OAAQ,OAAQ,MAAO,MAAO,OAAQ,SAAU,UAAW,eAAgB,SAAU,OAAQ,QAAS,OAAQ,SAAU,OAAQ,QAAS,UAAW,QAC1MC,UAAW,CAAC,KAAM,MAClBC,UAAW,CAAC,MAAO,OAAQ,SAAU,MAAO,KAAM,MAAO,SACzDC,UAAW,CACTC,KAAM,CAAC,CAAC,wBAAyB,cAAe,CAAC,2CAA4C,gBAAiB,CAAC,yEAA0E,CAAC,UAAW,QAAS,aAAc,CAC1NC,QAAS,eACR,CACDA,QAAS,YACR,CAAC,kCAAmC,CACrCC,MAAO,CACL,YAAa,UACb,aAAc,WACd,aAAc,YACd,WAAY,iBAGhBC,QAAS,CAAC,CAAC,UAAW,WAAY,CAAC,MAAO,UAAW,SAAU,CAAC,MAAO,UAAW,QAAS,CAAC,QAAS,YACrGC,WAAY,CAAC,CAAC,aAAc,SAAU,CAAC,MAAO,UAAW,YAAa,CAAC,OAAQ,YAC/EC,QAAS,CAAC,CAAC,KAAM,SAAU,WAAY,CAAC,SAAU,SAAU,qBAC5DC,gBAAiB,CAAC,CAAC,WAAY,SAAU,WAAY,CAAC,UAAW,UAAW,CAAC,MAAO,iBAAkB,CAAC,IAAK,SAAU,WAAY,CAAC,MAAO","file":"58-3ec8c58c2aa6995156c7.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: ';',\n    blockComment: ['#|', '|#']\n  },\n  brackets: [['(', ')'], ['{', '}'], ['[', ']']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  ignoreCase: true,\n  tokenPostfix: '.scheme',\n  brackets: [{\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }, {\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }],\n  keywords: ['case', 'do', 'let', 'loop', 'if', 'else', 'when', 'cons', 'car', 'cdr', 'cond', 'lambda', 'lambda*', 'syntax-rules', 'format', 'set!', 'quote', 'eval', 'append', 'list', 'list?', 'member?', 'load'],\n  constants: ['#t', '#f'],\n  operators: ['eq?', 'eqv?', 'equal?', 'and', 'or', 'not', 'null?'],\n  tokenizer: {\n    root: [[/#[xXoObB][0-9a-fA-F]+/, 'number.hex'], [/[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?/, 'number.float'], [/(?:\\b(?:(define|define-syntax|define-macro))\\b)(\\s+)((?:\\w|\\-|\\!|\\?)*)/, ['keyword', 'white', 'variable']], {\n      include: '@whitespace'\n    }, {\n      include: '@strings'\n    }, [/[a-zA-Z_#][a-zA-Z0-9_\\-\\?\\!\\*]*/, {\n      cases: {\n        '@keywords': 'keyword',\n        '@constants': 'constant',\n        '@operators': 'operators',\n        '@default': 'identifier'\n      }\n    }]],\n    comment: [[/[^\\|#]+/, 'comment'], [/#\\|/, 'comment', '@push'], [/\\|#/, 'comment', '@pop'], [/[\\|#]/, 'comment']],\n    whitespace: [[/[ \\t\\r\\n]+/, 'white'], [/#\\|/, 'comment', '@comment'], [/;.*$/, 'comment']],\n    strings: [[/\"$/, 'string', '@popall'], [/\"(?=.)/, 'string', '@multiLineString']],\n    multiLineString: [[/[^\\\\\"]+$/, 'string', '@popall'], [/[^\\\\\"]+/, 'string'], [/\\\\./, 'string.escape'], [/\"/, 'string', '@popall'], [/\\\\$/, 'string']]\n  }\n};"],"sourceRoot":""}