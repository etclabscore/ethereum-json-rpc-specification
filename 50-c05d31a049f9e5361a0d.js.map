{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/python/python.js"],"names":["_monaco","monaco","self","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","onEnterRules","beforeText","RegExp","action","indentAction","languages","IndentAction","Indent","folding","offSide","markers","start","end","language","defaultToken","tokenPostfix","keywords","token","tokenizer","root","include","cases","whitespace","endDocString","endDblDocString","numbers","strings","stringBody","dblStringBody"],"mappings":"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","file":"50-c05d31a049f9e5361a0d.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict'; // Allow for running under nodejs/requirejs in tests\n\nvar _monaco = typeof monaco === 'undefined' ? self.monaco : monaco;\n\nexport var conf = {\n  comments: {\n    lineComment: '#',\n    blockComment: ['\\'\\'\\'', '\\'\\'\\'']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string']\n  }, {\n    open: '\\'',\n    close: '\\'',\n    notIn: ['string', 'comment']\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(\"^\\\\s*(?:def|class|for|if|elif|else|while|try|with|finally|except|async).*?:\\\\s*$\"),\n    action: {\n      indentAction: _monaco.languages.IndentAction.Indent\n    }\n  }],\n  folding: {\n    offSide: true,\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.python',\n  keywords: ['and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'exec', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'None', 'not', 'or', 'pass', 'print', 'raise', 'return', 'self', 'try', 'while', 'with', 'yield', 'int', 'float', 'long', 'complex', 'hex', 'abs', 'all', 'any', 'apply', 'basestring', 'bin', 'bool', 'buffer', 'bytearray', 'callable', 'chr', 'classmethod', 'cmp', 'coerce', 'compile', 'complex', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'execfile', 'file', 'filter', 'format', 'frozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help', 'id', 'input', 'intern', 'isinstance', 'issubclass', 'iter', 'len', 'locals', 'list', 'map', 'max', 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'reversed', 'range', 'raw_input', 'reduce', 'reload', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'unichr', 'unicode', 'vars', 'xrange', 'zip', 'True', 'False', '__dict__', '__methods__', '__members__', '__class__', '__bases__', '__name__', '__mro__', '__subclasses__', '__init__', '__import__'],\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.bracket'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }],\n  tokenizer: {\n    root: [{\n      include: '@whitespace'\n    }, {\n      include: '@numbers'\n    }, {\n      include: '@strings'\n    }, [/[,:;]/, 'delimiter'], [/[{}\\[\\]()]/, '@brackets'], [/@[a-zA-Z]\\w*/, 'tag'], [/[a-zA-Z]\\w*/, {\n      cases: {\n        '@keywords': 'keyword',\n        '@default': 'identifier'\n      }\n    }]],\n    // Deal with white space, including single and multi-line comments\n    whitespace: [[/\\s+/, 'white'], [/(^#.*$)/, 'comment'], [/'''/, 'string', '@endDocString'], [/\"\"\"/, 'string', '@endDblDocString']],\n    endDocString: [[/[^']+/, 'string'], [/\\\\'/, 'string'], [/'''/, 'string', '@popall'], [/'/, 'string']],\n    endDblDocString: [[/[^\"]+/, 'string'], [/\\\\\"/, 'string'], [/\"\"\"/, 'string', '@popall'], [/\"/, 'string']],\n    // Recognize hex, negatives, decimals, imaginaries, longs, and scientific notation\n    numbers: [[/-?0x([abcdef]|[ABCDEF]|\\d)+[lL]?/, 'number.hex'], [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?[jJ]?[lL]?/, 'number']],\n    // Recognize strings, including those broken across lines with \\ (but not without)\n    strings: [[/'$/, 'string.escape', '@popall'], [/'/, 'string.escape', '@stringBody'], [/\"$/, 'string.escape', '@popall'], [/\"/, 'string.escape', '@dblStringBody']],\n    stringBody: [[/[^\\\\']+$/, 'string', '@popall'], [/[^\\\\']+/, 'string'], [/\\\\./, 'string'], [/'/, 'string.escape', '@popall'], [/\\\\$/, 'string']],\n    dblStringBody: [[/[^\\\\\"]+$/, 'string', '@popall'], [/[^\\\\\"]+/, 'string'], [/\\\\./, 'string'], [/\"/, 'string.escape', '@popall'], [/\\\\$/, 'string']]\n  }\n};"],"sourceRoot":""}