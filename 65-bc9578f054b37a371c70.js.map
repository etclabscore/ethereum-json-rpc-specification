{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","identifier","attributes","accessmodifiers","keywords","symbols","operatorstart","operatorend","operators","escapes","tokenizer","root","include","symbol","comment","commentdocbody","commentbody","attribute","cases","literal","token","next","stringlit","interpolatedexpression","keyword","escapedkeyword","invokedmethod"],"mappings":"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","file":"65-bc9578f054b37a371c70.js","sourcesContent":["/*!---------------------------------------------------------------------------------------------\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '`',\n    close: '`'\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, {\n    open: '`',\n    close: '`'\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.swift',\n  // TODO(owensd): Support the full range of unicode valid identifiers.\n  identifier: /[a-zA-Z_][\\w$]*/,\n  // TODO(owensd): Support the @availability macro properly.\n  attributes: ['@autoclosure', '@noescape', '@noreturn', '@NSApplicationMain', '@NSCopying', '@NSManaged', '@objc', '@UIApplicationMain', '@noreturn', '@availability', '@IBAction', '@IBDesignable', '@IBInspectable', '@IBOutlet'],\n  accessmodifiers: ['public', 'private', 'internal'],\n  keywords: ['__COLUMN__', '__FILE__', '__FUNCTION__', '__LINE__', 'as', 'as!', 'as?', 'associativity', 'break', 'case', 'catch', 'class', 'continue', 'convenience', 'default', 'deinit', 'didSet', 'do', 'dynamic', 'dynamicType', 'else', 'enum', 'extension', 'fallthrough', 'final', 'for', 'func', 'get', 'guard', 'if', 'import', 'in', 'infix', 'init', 'inout', 'internal', 'is', 'lazy', 'left', 'let', 'mutating', 'nil', 'none', 'nonmutating', 'operator', 'optional', 'override', 'postfix', 'precedence', 'prefix', 'private', 'protocol', 'Protocol', 'public', 'repeat', 'required', 'return', 'right', 'self', 'Self', 'set', 'static', 'struct', 'subscript', 'super', 'switch', 'throw', 'throws', 'try', 'try!', 'Type', 'typealias', 'unowned', 'var', 'weak', 'where', 'while', 'willSet', 'FALSE', 'TRUE'],\n  symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n  // Moved . to operatorstart so it can be a delimiter\n  operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n  operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n  operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n  // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [{\n      include: '@comment'\n    }, {\n      include: '@attribute'\n    }, {\n      include: '@literal'\n    }, {\n      include: '@keyword'\n    }, {\n      include: '@invokedmethod'\n    }, {\n      include: '@symbol'\n    }],\n    symbol: [[/[{}()\\[\\]]/, '@brackets'], [/[<>](?!@symbols)/, '@brackets'], [/[.]/, 'delimiter'], [/@operators/, 'operator'], [/@symbols/, 'operator']],\n    comment: [[/\\/\\/\\/.*$/, 'comment.doc'], [/\\/\\*\\*/, 'comment.doc', '@commentdocbody'], [/\\/\\/.*$/, 'comment'], [/\\/\\*/, 'comment', '@commentbody']],\n    commentdocbody: [[/\\/\\*/, 'comment', '@commentbody'], [/\\*\\//, 'comment.doc', '@pop'], [/\\:[a-zA-Z]+\\:/, 'comment.doc.param'], [/./, 'comment.doc']],\n    commentbody: [[/\\/\\*/, 'comment', '@commentbody'], [/\\*\\//, 'comment', '@pop'], [/./, 'comment']],\n    attribute: [[/\\@@identifier/, {\n      cases: {\n        '@attributes': 'keyword.control',\n        '@default': ''\n      }\n    }]],\n    literal: [[/\"/, {\n      token: 'string.quote',\n      next: '@stringlit'\n    }], [/0[b]([01]_?)+/, 'number.binary'], [/0[o]([0-7]_?)+/, 'number.octal'], [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, 'number.hex'], [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, 'number.float'], [/(\\d_?)+/, 'number']],\n    stringlit: [[/\\\\\\(/, {\n      token: 'operator',\n      next: '@interpolatedexpression'\n    }], [/@escapes/, 'string'], [/\\\\./, 'string.escape.invalid'], [/\"/, {\n      token: 'string.quote',\n      next: '@pop'\n    }], [/./, 'string']],\n    interpolatedexpression: [[/\\(/, {\n      token: 'operator',\n      next: '@interpolatedexpression'\n    }], [/\\)/, {\n      token: 'operator',\n      next: '@pop'\n    }], {\n      include: '@literal'\n    }, {\n      include: '@keyword'\n    }, {\n      include: '@symbol'\n    }],\n    keyword: [[/`/, {\n      token: 'operator',\n      next: '@escapedkeyword'\n    }], [/@identifier/, {\n      cases: {\n        '@keywords': 'keyword',\n        '[A-Z][\\a-zA-Z0-9$]*': 'type.identifier',\n        '@default': 'identifier'\n      }\n    }]],\n    escapedkeyword: [[/`/, {\n      token: 'operator',\n      next: '@pop'\n    }], [/./, 'identifier']],\n    //\t\tsymbol: [\n    //\t\t\t[ /@symbols/, 'operator' ],\n    //\t\t\t[ /@operators/, 'operator' ]\n    //\t\t],\n    invokedmethod: [[/([.])(@identifier)/, {\n      cases: {\n        '$2': ['delimeter', 'type.identifier'],\n        '@default': ''\n      }\n    }]]\n  }\n};"],"sourceRoot":""}