{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/bat/bat.js"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","token","keywords","symbols","escapes","tokenizer","root","string","cases","next"],"mappings":"8FAAA,qFAMO,IAAIA,EAAO,CAChBC,SAAU,CACRC,YAAa,OAEfC,SAAU,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MACzCC,iBAAkB,CAAC,CACjBC,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,MAETC,iBAAkB,CAAC,CACjBF,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,MAETE,QAAS,CACPC,QAAS,CACPC,MAAO,IAAIC,OAAO,gCAClBC,IAAK,IAAID,OAAO,sCAIXE,EAAW,CACpBC,aAAc,GACdC,YAAY,EACZC,aAAc,OACdb,SAAU,CAAC,CACTc,MAAO,oBACPZ,KAAM,IACNC,MAAO,KACN,CACDW,MAAO,wBACPZ,KAAM,IACNC,MAAO,KACN,CACDW,MAAO,mBACPZ,KAAM,IACNC,MAAO,MAETY,SAAU,4FAEVC,QAAS,0BACTC,QAAS,wEAETC,UAAW,CACTC,KAAM,CAAC,CAAC,wBAAyB,CAAC,GAAI,YAAa,CAAC,yBAA0B,CAAC,CAC7EL,MAAO,WACN,CACDA,MAAO,gBAET,CAAC,aAAc,IACf,CAAC,iBAAkB,wBAAyB,CAAC,iBAAkB,wBAC/D,CAAC,eAAgB,IACjB,CAAC,OAAQ,WACT,CAAC,UAAW,YAAa,CAAC,gBAAiB,YAC3C,CAAC,aAAc,aAAc,CAAC,WAAY,aAC1C,CAAC,2BAA4B,gBAAiB,CAAC,gCAAiC,cAAe,CAAC,MAAO,UACvG,CAAC,QAAS,aACV,CAAC,IAAK,SAAU,aAAc,CAAC,IAAK,SAAU,cAC9CM,OAAQ,CAAC,CAAC,YAAa,CACrBC,MAAO,CACL,OAAQ,CACNP,MAAO,SACPQ,KAAM,WAER,WAAY,YAEZ,CAAC,WAAY,iBAAkB,CAAC,MAAO,yBAA0B,CAAC,WAAY,YAAa,CAAC,gBAAiB,YAAa,CAAC,OAAQ,CACrID,MAAO,CACL,UAAW,CACTP,MAAO,SACPQ,KAAM,QAER,WAAY,YAEZ,CAAC,IAAK,SAAU","file":"19-0bc80e9421c9f0bd1f63.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: 'REM'\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#region\"),\n      end: new RegExp(\"^\\\\s*(::\\\\s*|REM\\\\s+)#endregion\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  ignoreCase: true,\n  tokenPostfix: '.bat',\n  brackets: [{\n    token: 'delimiter.bracket',\n    open: '{',\n    close: '}'\n  }, {\n    token: 'delimiter.parenthesis',\n    open: '(',\n    close: ')'\n  }, {\n    token: 'delimiter.square',\n    open: '[',\n    close: ']'\n  }],\n  keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\n  // we include these common regular expressions\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/^(\\s*)(rem(?:\\s.*|))$/, ['', 'comment']], [/(\\@?)(@keywords)(?!\\w)/, [{\n      token: 'keyword'\n    }, {\n      token: 'keyword.$2'\n    }]], // whitespace\n    [/[ \\t\\r\\n]+/, ''], // blocks\n    [/setlocal(?!\\w)/, 'keyword.tag-setlocal'], [/endlocal(?!\\w)/, 'keyword.tag-setlocal'], // words\n    [/[a-zA-Z_]\\w*/, ''], // labels\n    [/:\\w*/, 'metatag'], // variables\n    [/%[^%]+%/, 'variable'], [/%%[\\w]+(?!\\w)/, 'variable'], // punctuations\n    [/[{}()\\[\\]]/, '@brackets'], [/@symbols/, 'delimiter'], // numbers\n    [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'], [/\\d+/, 'number'], // punctuation: after number because of .\\d floats\n    [/[;,.]/, 'delimiter'], // strings:\n    [/\"/, 'string', '@string.\"'], [/'/, 'string', '@string.\\'']],\n    string: [[/[^\\\\\"'%]+/, {\n      cases: {\n        '@eos': {\n          token: 'string',\n          next: '@popall'\n        },\n        '@default': 'string'\n      }\n    }], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/%[\\w ]+%/, 'variable'], [/%%[\\w]+(?!\\w)/, 'variable'], [/[\"']/, {\n      cases: {\n        '$#==$S2': {\n          token: 'string',\n          next: '@pop'\n        },\n        '@default': 'string'\n      }\n    }], [/$/, 'string', '@popall']]\n  }\n};"],"sourceRoot":""}