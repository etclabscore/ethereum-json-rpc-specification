{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js"],"names":["_monaco","monaco","self","EMPTY_ELEMENTS","conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","language","defaultToken","tokenPostfix","tokenizer","root","token","switchTo","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","handlebarsInSimpleState","include","handlebarsInEmbeddedState","handlebarsRoot"],"mappings":"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","file":"29-092a414f8fd4cd5259ed.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict'; // Allow for running under nodejs/requirejs in tests\n\nvar _monaco = typeof monaco === 'undefined' ? self.monaco : monaco;\n\nvar EMPTY_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr'];\nexport var conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: ['{{!--', '--}}']\n  },\n  brackets: [['<!--', '-->'], ['<', '>'], ['{{', '}}'], ['{', '}'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  surroundingPairs: [{\n    open: '<',\n    close: '>'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n    afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\n    action: {\n      indentAction: _monaco.languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n    action: {\n      indentAction: _monaco.languages.IndentAction.Indent\n    }\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '',\n  // ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.root'\n    }], [/<!DOCTYPE/, 'metatag.html', '@doctype'], [/<!--/, 'comment.html', '@comment'], [/(<)(\\w+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']], [/(<)(script)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@script'\n    }]], [/(<)(style)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@style'\n    }]], [/(<)([:\\w]+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/(<\\/)(\\w+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/</, 'delimiter.html'], [/\\{/, 'delimiter.html'], [/[^<{]+/] // text\n    ],\n    doctype: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.comment'\n    }], [/[^>]+/, 'metatag.content.html'], [/>/, 'metatag.html', '@pop']],\n    comment: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.comment'\n    }], [/-->/, 'comment.html', '@pop'], [/[^-]+/, 'comment.content.html'], [/./, 'comment.content.html']],\n    otherTag: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.otherTag'\n    }], [/\\/?>/, 'delimiter.html', '@pop'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/]],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.script'\n    }], [/type/, 'attribute.name', '@scriptAfterType'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.text/javascript',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', {\n      token: 'delimiter.html',\n      next: '@pop'\n    }]]],\n    // After <script ... type\n    scriptAfterType: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.scriptAfterType'\n    }], [/=/, 'delimiter', '@scriptAfterTypeEquals'], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.text/javascript',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type =\n    scriptAfterTypeEquals: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.scriptAfterTypeEquals'\n    }], [/\"([^\"]*)\"/, {\n      token: 'attribute.value',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.text/javascript',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type = $S2\n    scriptWithCustomType: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.scriptWithCustomType.$S2'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    scriptEmbedded: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInEmbeddedState.scriptEmbedded.$S2',\n      nextEmbedded: '@pop'\n    }], [/<\\/script/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }]],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.style'\n    }], [/type/, 'attribute.name', '@styleAfterType'], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.text/css',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', {\n      token: 'delimiter.html',\n      next: '@pop'\n    }]]],\n    // After <style ... type\n    styleAfterType: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.styleAfterType'\n    }], [/=/, 'delimiter', '@styleAfterTypeEquals'], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.text/css',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type =\n    styleAfterTypeEquals: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.styleAfterTypeEquals'\n    }], [/\"([^\"]*)\"/, {\n      token: 'attribute.value',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.text/css',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type = $S2\n    styleWithCustomType: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInSimpleState.styleWithCustomType.$S2'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value'], [/'([^']*)'/, 'attribute.value'], [/[\\w\\-]+/, 'attribute.name'], [/=/, 'delimiter'], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    styleEmbedded: [[/\\{\\{/, {\n      token: '@rematch',\n      switchTo: '@handlebarsInEmbeddedState.styleEmbedded.$S2',\n      nextEmbedded: '@pop'\n    }], [/<\\/style/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }]],\n    // -- END <style> tags handling\n    handlebarsInSimpleState: [[/\\{\\{\\{?/, 'delimiter.handlebars'], [/\\}\\}\\}?/, {\n      token: 'delimiter.handlebars',\n      switchTo: '@$S2.$S3'\n    }], {\n      include: 'handlebarsRoot'\n    }],\n    handlebarsInEmbeddedState: [[/\\{\\{\\{?/, 'delimiter.handlebars'], [/\\}\\}\\}?/, {\n      token: 'delimiter.handlebars',\n      switchTo: '@$S2.$S3',\n      nextEmbedded: '$S3'\n    }], {\n      include: 'handlebarsRoot'\n    }],\n    handlebarsRoot: [[/[#/][^\\s}]+/, 'keyword.helper.handlebars'], [/else\\b/, 'keyword.helper.handlebars'], [/[\\s]+/], [/[^}]/, 'variable.parameter.handlebars']]\n  }\n};"],"sourceRoot":""}