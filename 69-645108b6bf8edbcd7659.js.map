{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/vb/vb.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ignoreCase","token","keywords","tagwords","symbols","escapes","integersuffix","floatsuffix","tokenizer","root","include","cases","whitespace","string"],"mappings":"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","file":"69-645108b6bf8edbcd7659.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  comments: {\n    lineComment: '\\'',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>'], ['addhandler', 'end addhandler'], ['class', 'end class'], ['enum', 'end enum'], ['event', 'end event'], ['function', 'end function'], ['get', 'end get'], ['if', 'end if'], ['interface', 'end interface'], ['module', 'end module'], ['namespace', 'end namespace'], ['operator', 'end operator'], ['property', 'end property'], ['raiseevent', 'end raiseevent'], ['removehandler', 'end removehandler'], ['select', 'end select'], ['set', 'end set'], ['structure', 'end structure'], ['sub', 'end sub'], ['synclock', 'end synclock'], ['try', 'end try'], ['while', 'end while'], ['with', 'end with'], ['using', 'end using'], ['do', 'loop'], ['for', 'next']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}',\n    notIn: ['string', 'comment']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string', 'comment']\n  }, {\n    open: '(',\n    close: ')',\n    notIn: ['string', 'comment']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string', 'comment']\n  }, {\n    open: '<',\n    close: '>',\n    notIn: ['string', 'comment']\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#Region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#End Region\\\\b\")\n    }\n  }\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '.vb',\n  ignoreCase: true,\n  brackets: [{\n    token: 'delimiter.bracket',\n    open: '{',\n    close: '}'\n  }, {\n    token: 'delimiter.array',\n    open: '[',\n    close: ']'\n  }, {\n    token: 'delimiter.parenthesis',\n    open: '(',\n    close: ')'\n  }, {\n    token: 'delimiter.angle',\n    open: '<',\n    close: '>'\n  }, // Special bracket statement pairs\n  // according to https://msdn.microsoft.com/en-us/library/tsw2a11z.aspx\n  {\n    token: 'keyword.tag-addhandler',\n    open: 'addhandler',\n    close: 'end addhandler'\n  }, {\n    token: 'keyword.tag-class',\n    open: 'class',\n    close: 'end class'\n  }, {\n    token: 'keyword.tag-enum',\n    open: 'enum',\n    close: 'end enum'\n  }, {\n    token: 'keyword.tag-event',\n    open: 'event',\n    close: 'end event'\n  }, {\n    token: 'keyword.tag-function',\n    open: 'function',\n    close: 'end function'\n  }, {\n    token: 'keyword.tag-get',\n    open: 'get',\n    close: 'end get'\n  }, {\n    token: 'keyword.tag-if',\n    open: 'if',\n    close: 'end if'\n  }, {\n    token: 'keyword.tag-interface',\n    open: 'interface',\n    close: 'end interface'\n  }, {\n    token: 'keyword.tag-module',\n    open: 'module',\n    close: 'end module'\n  }, {\n    token: 'keyword.tag-namespace',\n    open: 'namespace',\n    close: 'end namespace'\n  }, {\n    token: 'keyword.tag-operator',\n    open: 'operator',\n    close: 'end operator'\n  }, {\n    token: 'keyword.tag-property',\n    open: 'property',\n    close: 'end property'\n  }, {\n    token: 'keyword.tag-raiseevent',\n    open: 'raiseevent',\n    close: 'end raiseevent'\n  }, {\n    token: 'keyword.tag-removehandler',\n    open: 'removehandler',\n    close: 'end removehandler'\n  }, {\n    token: 'keyword.tag-select',\n    open: 'select',\n    close: 'end select'\n  }, {\n    token: 'keyword.tag-set',\n    open: 'set',\n    close: 'end set'\n  }, {\n    token: 'keyword.tag-structure',\n    open: 'structure',\n    close: 'end structure'\n  }, {\n    token: 'keyword.tag-sub',\n    open: 'sub',\n    close: 'end sub'\n  }, {\n    token: 'keyword.tag-synclock',\n    open: 'synclock',\n    close: 'end synclock'\n  }, {\n    token: 'keyword.tag-try',\n    open: 'try',\n    close: 'end try'\n  }, {\n    token: 'keyword.tag-while',\n    open: 'while',\n    close: 'end while'\n  }, {\n    token: 'keyword.tag-with',\n    open: 'with',\n    close: 'end with'\n  }, // Other pairs\n  {\n    token: 'keyword.tag-using',\n    open: 'using',\n    close: 'end using'\n  }, {\n    token: 'keyword.tag-do',\n    open: 'do',\n    close: 'loop'\n  }, {\n    token: 'keyword.tag-for',\n    open: 'for',\n    close: 'next'\n  }],\n  keywords: ['AddHandler', 'AddressOf', 'Alias', 'And', 'AndAlso', 'As', 'Async', 'Boolean', 'ByRef', 'Byte', 'ByVal', 'Call', 'Case', 'Catch', 'CBool', 'CByte', 'CChar', 'CDate', 'CDbl', 'CDec', 'Char', 'CInt', 'Class', 'CLng', 'CObj', 'Const', 'Continue', 'CSByte', 'CShort', 'CSng', 'CStr', 'CType', 'CUInt', 'CULng', 'CUShort', 'Date', 'Decimal', 'Declare', 'Default', 'Delegate', 'Dim', 'DirectCast', 'Do', 'Double', 'Each', 'Else', 'ElseIf', 'End', 'EndIf', 'Enum', 'Erase', 'Error', 'Event', 'Exit', 'False', 'Finally', 'For', 'Friend', 'Function', 'Get', 'GetType', 'GetXMLNamespace', 'Global', 'GoSub', 'GoTo', 'Handles', 'If', 'Implements', 'Imports', 'In', 'Inherits', 'Integer', 'Interface', 'Is', 'IsNot', 'Let', 'Lib', 'Like', 'Long', 'Loop', 'Me', 'Mod', 'Module', 'MustInherit', 'MustOverride', 'MyBase', 'MyClass', 'NameOf', 'Namespace', 'Narrowing', 'New', 'Next', 'Not', 'Nothing', 'NotInheritable', 'NotOverridable', 'Object', 'Of', 'On', 'Operator', 'Option', 'Optional', 'Or', 'OrElse', 'Out', 'Overloads', 'Overridable', 'Overrides', 'ParamArray', 'Partial', 'Private', 'Property', 'Protected', 'Public', 'RaiseEvent', 'ReadOnly', 'ReDim', 'RemoveHandler', 'Resume', 'Return', 'SByte', 'Select', 'Set', 'Shadows', 'Shared', 'Short', 'Single', 'Static', 'Step', 'Stop', 'String', 'Structure', 'Sub', 'SyncLock', 'Then', 'Throw', 'To', 'True', 'Try', 'TryCast', 'TypeOf', 'UInteger', 'ULong', 'UShort', 'Using', 'Variant', 'Wend', 'When', 'While', 'Widening', 'With', 'WithEvents', 'WriteOnly', 'Xor'],\n  tagwords: ['If', 'Sub', 'Select', 'Try', 'Class', 'Enum', 'Function', 'Get', 'Interface', 'Module', 'Namespace', 'Operator', 'Set', 'Structure', 'Using', 'While', 'With', 'Do', 'Loop', 'For', 'Next', 'Property', 'Continue', 'AddHandler', 'RemoveHandler', 'Event', 'RaiseEvent', 'SyncLock'],\n  // we include these common regular expressions\n  symbols: /[=><!~?;\\.,:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  integersuffix: /U?[DI%L&S@]?/,\n  floatsuffix: /[R#F!]?/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [// whitespace\n    {\n      include: '@whitespace'\n    }, // special ending tag-words\n    [/next(?!\\w)/, {\n      token: 'keyword.tag-for'\n    }], [/loop(?!\\w)/, {\n      token: 'keyword.tag-do'\n    }], // usual ending tags\n    [/end\\s+(?!for|do)([a-zA-Z_]\\w*)/, {\n      token: 'keyword.tag-$1'\n    }], // identifiers, tagwords, and keywords\n    [/[a-zA-Z_]\\w*/, {\n      cases: {\n        '@tagwords': {\n          token: 'keyword.tag-$0'\n        },\n        '@keywords': {\n          token: 'keyword.$0'\n        },\n        '@default': 'identifier'\n      }\n    }], // Preprocessor directive\n    [/^\\s*#\\w+/, 'keyword'], // numbers\n    [/\\d*\\d+e([\\-+]?\\d+)?(@floatsuffix)/, 'number.float'], [/\\d*\\.\\d+(e[\\-+]?\\d+)?(@floatsuffix)/, 'number.float'], [/&H[0-9a-f]+(@integersuffix)/, 'number.hex'], [/&0[0-7]+(@integersuffix)/, 'number.octal'], [/\\d+(@integersuffix)/, 'number'], // date literal\n    [/#.*#/, 'number'], // delimiters and operators\n    [/[{}()\\[\\]]/, '@brackets'], [/@symbols/, 'delimiter'], // strings\n    [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], [/\"/, 'string', '@string']],\n    whitespace: [[/[ \\t\\r\\n]+/, ''], [/(\\'|REM(?!\\w)).*$/, 'comment']],\n    string: [[/[^\\\\\"]+/, 'string'], [/@escapes/, 'string.escape'], [/\\\\./, 'string.escape.invalid'], [/\"C?/, 'string', '@pop']]\n  }\n};"],"sourceRoot":""}