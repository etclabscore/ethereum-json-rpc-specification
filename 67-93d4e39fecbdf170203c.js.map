{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.js"],"names":["conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","ignoreCase","keywords","tokenizer","root","token","next","commentState","blockState","include","rawDataState","variableState","stringState","interpolationState","expression","cases","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","switchTo","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded"],"mappings":"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","file":"67-93d4e39fecbdf170203c.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport var conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: ['{#', '#}']\n  },\n  brackets: [['{#', '#}'], ['{%', '%}'], ['{{', '}}'], ['(', ')'], ['[', ']'], // HTML\n  ['<!--', '-->'], ['<', '>']],\n  autoClosingPairs: [{\n    open: '{# ',\n    close: ' #}'\n  }, {\n    open: '{% ',\n    close: ' %}'\n  }, {\n    open: '{{ ',\n    close: ' }}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }],\n  surroundingPairs: [{\n    open: '\"',\n    close: '\"'\n  }, {\n    open: '\\'',\n    close: '\\''\n  }, // HTML\n  {\n    open: '<',\n    close: '>'\n  }]\n};\nexport var language = {\n  defaultToken: '',\n  tokenPostfix: '',\n  ignoreCase: true,\n  keywords: [// (opening) tags\n  'apply', 'autoescape', 'block', 'deprecated', 'do', 'embed', 'extends', 'flush', 'for', 'from', 'if', 'import', 'include', 'macro', 'sandbox', 'set', 'use', 'verbatim', 'with', // closing tags\n  'endapply', 'endautoescape', 'endblock', 'endembed', 'endfor', 'endif', 'endmacro', 'endsandbox', 'endset', 'endwith', // literals\n  'true', 'false'],\n  tokenizer: {\n    root: [// whitespace\n    [/\\s+/], // Twig Tag Delimiters\n    [/{#/, 'comment.twig', '@commentState'], [/{%[-~]?/, 'delimiter.twig', '@blockState'], [/{{[-~]?/, 'delimiter.twig', '@variableState'], // HTML\n    [/<!DOCTYPE/, 'metatag.html', '@doctype'], [/<!--/, 'comment.html', '@comment'], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, ['delimiter.html', 'tag.html', '', 'delimiter.html']], [/(<)(script)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@script'\n    }]], [/(<)(style)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@style'\n    }]], [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter.html', {\n      token: 'tag.html',\n      next: '@otherTag'\n    }]], [/</, 'delimiter.html'], [/[^<]+/]],\n\n    /**\n     * Comment Tag Handling\n     */\n    commentState: [[/#}/, 'comment.twig', '@pop'], [/./, 'comment.twig']],\n\n    /**\n     * Block Tag Handling\n     */\n    blockState: [[/[-~]?%}/, 'delimiter.twig', '@pop'], // whitespace\n    [/\\s+/], // verbatim\n    // Unlike other blocks, verbatim ehas its own state\n    // transition to ensure we mark its contents as strings.\n    [/(verbatim)(\\s*)([-~]?%})/, ['keyword.twig', '', {\n      token: 'delimiter.twig',\n      next: '@rawDataState'\n    }]], {\n      include: 'expression'\n    }],\n    rawDataState: [// endverbatim\n    [/({%[-~]?)(\\s*)(endverbatim)(\\s*)([-~]?%})/, ['delimiter.twig', '', 'keyword.twig', '', {\n      token: 'delimiter.twig',\n      next: '@popall'\n    }]], [/./, 'string.twig']],\n\n    /**\n     * Variable Tag Handling\n     */\n    variableState: [[/[-~]?}}/, 'delimiter.twig', '@pop'], {\n      include: 'expression'\n    }],\n    stringState: [// closing double quoted string\n    [/\"/, 'string.twig', '@pop'], // interpolation start\n    [/#{\\s*/, 'string.twig', '@interpolationState'], // string part\n    [/[^#\"\\\\]*(?:(?:\\\\.|#(?!\\{))[^#\"\\\\]*)*/, 'string.twig']],\n    interpolationState: [// interpolation end\n    [/}/, 'string.twig', '@pop'], {\n      include: 'expression'\n    }],\n\n    /**\n     * Expression Handling\n     */\n    expression: [// whitespace\n    [/\\s+/], // operators - math\n    [/\\+|-|\\/{1,2}|%|\\*{1,2}/, 'operators.twig'], // operators - logic\n    [/(and|or|not|b-and|b-xor|b-or)(\\s+)/, ['operators.twig', '']], // operators - comparison (symbols)\n    [/==|!=|<|>|>=|<=/, 'operators.twig'], // operators - comparison (words)\n    [/(starts with|ends with|matches)(\\s+)/, ['operators.twig', '']], // operators - containment\n    [/(in)(\\s+)/, ['operators.twig', '']], // operators - test\n    [/(is)(\\s+)/, ['operators.twig', '']], // operators - misc\n    [/\\||~|:|\\.{1,2}|\\?{1,2}/, 'operators.twig'], // names\n    [/[^\\W\\d][\\w]*/, {\n      cases: {\n        '@keywords': 'keyword.twig',\n        '@default': 'variable.twig'\n      }\n    }], // numbers\n    [/\\d+(\\.\\d+)?/, 'number.twig'], // punctuation\n    [/\\(|\\)|\\[|\\]|{|}|,/, 'delimiter.twig'], // strings\n    [/\"([^#\"\\\\]*(?:\\\\.[^#\"\\\\]*)*)\"|\\'([^\\'\\\\]*(?:\\\\.[^\\'\\\\]*)*)\\'/, 'string.twig'], // opening double quoted string\n    [/\"/, 'string.twig', '@stringState'], // misc syntactic constructs\n    // These are not operators per se, but for the purposes of lexical analysis we\n    // can treat them as such.\n    // arrow functions\n    [/=>/, 'operators.twig'], // assignment\n    [/=/, 'operators.twig']],\n\n    /**\n     * HTML\n     */\n    doctype: [[/[^>]+/, 'metatag.content.html'], [/>/, 'metatag.html', '@pop']],\n    comment: [[/-->/, 'comment.html', '@pop'], [/[^-]+/, 'comment.content.html'], [/./, 'comment.content.html']],\n    otherTag: [[/\\/?>/, 'delimiter.html', '@pop'], [/\"([^\"]*)\"/, 'attribute.value.html'], [/'([^']*)'/, 'attribute.value.html'], [/[\\w\\-]+/, 'attribute.name.html'], [/=/, 'delimiter.html'], [/[ \\t\\r\\n]+/]],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [[/type/, 'attribute.name.html', '@scriptAfterType'], [/\"([^\"]*)\"/, 'attribute.value.html'], [/'([^']*)'/, 'attribute.value.html'], [/[\\w\\-]+/, 'attribute.name.html'], [/=/, 'delimiter.html'], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(script\\s*)(>)/, ['delimiter.html', 'tag.html', {\n      token: 'delimiter.html',\n      next: '@pop'\n    }]]],\n    // After <script ... type\n    scriptAfterType: [[/=/, 'delimiter.html', '@scriptAfterTypeEquals'], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type =\n    scriptAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: 'attribute.value.html',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value.html',\n      switchTo: '@scriptWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded',\n      nextEmbedded: 'text/javascript'\n    }], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <script ... type = $S2\n    scriptWithCustomType: [[/>/, {\n      token: 'delimiter.html',\n      next: '@scriptEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value.html'], [/'([^']*)'/, 'attribute.value.html'], [/[\\w\\-]+/, 'attribute.name.html'], [/=/, 'delimiter.html'], [/[ \\t\\r\\n]+/], [/<\\/script\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    scriptEmbedded: [[/<\\/script/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }], [/[^<]+/, '']],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [[/type/, 'attribute.name.html', '@styleAfterType'], [/\"([^\"]*)\"/, 'attribute.value.html'], [/'([^']*)'/, 'attribute.value.html'], [/[\\w\\-]+/, 'attribute.name.html'], [/=/, 'delimiter.html'], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/(<\\/)(style\\s*)(>)/, ['delimiter.html', 'tag.html', {\n      token: 'delimiter.html',\n      next: '@pop'\n    }]]],\n    // After <style ... type\n    styleAfterType: [[/=/, 'delimiter.html', '@styleAfterTypeEquals'], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type =\n    styleAfterTypeEquals: [[/\"([^\"]*)\"/, {\n      token: 'attribute.value.html',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/'([^']*)'/, {\n      token: 'attribute.value.html',\n      switchTo: '@styleWithCustomType.$1'\n    }], [/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded',\n      nextEmbedded: 'text/css'\n    }], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    // After <style ... type = $S2\n    styleWithCustomType: [[/>/, {\n      token: 'delimiter.html',\n      next: '@styleEmbedded.$S2',\n      nextEmbedded: '$S2'\n    }], [/\"([^\"]*)\"/, 'attribute.value.html'], [/'([^']*)'/, 'attribute.value.html'], [/[\\w\\-]+/, 'attribute.name.html'], [/=/, 'delimiter.html'], [/[ \\t\\r\\n]+/], [/<\\/style\\s*>/, {\n      token: '@rematch',\n      next: '@pop'\n    }]],\n    styleEmbedded: [[/<\\/style/, {\n      token: '@rematch',\n      next: '@pop',\n      nextEmbedded: '@pop'\n    }], [/[^<]+/, '']]\n  }\n};"],"sourceRoot":""}